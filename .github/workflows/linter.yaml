name: Super-Linter

# Triggerar detta workflow vid varje 'push' och 'pull request' till 'main' grenen.
# Detta säkerställer att kodkvalitetskontroller sker kontinuerligt.
on:
  push:
  pull_request:
    branches:
      - main

jobs:
  super-lint:
    name: Lint kodbasen
    # Kör detta jobb på en virtuell Ubuntu-maskin. 'ubuntu-latest' hänvisar till senaste tillgängliga Ubuntu-version.
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      # Definierar en matris för att köra linter på två versioner av Node.js (14.x och 16.x).
      # Detta testar kompatibilitet över flera miljöer och Node.js-versioner.
      matrix:
        node-version: [14.x, 16.x]

    steps:
      - name: Hämta koden
        uses: actions/checkout@v4
        # Denna steg använder 'checkout' action för att klona koden från GitHub-repositoriet.

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
        # Cachar npm moduler för att påskynda installationsprocessen genom att återanvända tidigare nedladdade moduler.

      - name: Använd Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
        # Denna steg ställer in Node.js-versionen enligt den definierade matrisen, vilket möjliggör testning över olika Node.js-versioner.

      - name: Installera beroenden
        run: npm install
        # Kör 'npm install' för att installera nödvändiga beroenden som definierats i 'package-lock.json'.

      - name: Kör Super-Linter
        uses: github/super-linter@v4
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
        # Kör Super-Linter som granskar kodens kvalitet och standard över flera programmeringsspråk och format.

      - name: Ladda upp linter-resultat
        uses: actions/upload-artifact@v3
        with:
          name: linter-reports
          path: /github/workspace/superlinter.report.json
        # Laddar upp linter-rapporterna som genereras av Super-Linter för granskning.

      - name: Skapa linter-status
        if: failure()
        run: echo "Linter detected issues. Check the report for details."
        # Detta steg körs endast om linter-processen misslyckas. Det informerar användare att kontrollera linter-rapporten.

      - name: Skicka notifiering
        if: failure()
        uses: some/notification-action@v1
        with:
          message: "Linting failed, please review the linter reports."
          token: ${{ secrets.SLACK_TOKEN }}
        # Skickar notifieringar till exempel via Slack om linter-processen misslyckas, vilket kräver omedelbar uppmärksamhet.






