name: Super-Linter

# Definierar när workflow ska triggas. I detta fall vid push till 'main'-grenen och vid pull requests till 'main'.
on:
  push:
  pull_request:
    branches:
      - main

jobs:
  super-lint:
    name: Lint kodbasen
    # Definierar att jobbet ska köras på senaste Ubuntu-versionen för maximal kompatibilitet.
    runs-on: ubuntu-latest

    # Strategy-blocket hanterar hur jobben ska köras parallellt och konfigurationer för felhantering.
    strategy:
      fail-fast: false  # Fortsätter köra andra jobb även om ett misslyckas.
      matrix:
        node-version: [14.x, 16.x]  # Definierar en matris för Node.js-versioner för att testa kompatibilitet över versioner.

    steps:
      - name: Hämta koden
        uses: actions/checkout@v4
        # Använder 'actions/checkout' för att klona git-repositoriet till GitHub Actions-runner.

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
        # Cachar npm moduler för att snabba upp byggprocessen genom att undvika onödiga nedladdningar.

      - name: Använd Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
        # Ställer in Node.js versioner enligt definierad matris för att säkerställa att miljön är korrekt.

      - name: Installera beroenden
        run: npm install
        # Installerar projektberoenden från npm för att förbereda miljön för lintning.

      - name: Kör Super-Linter
        uses: github/super-linter@v4
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
        # Kör Super-Linter för att granska kodens kvalitet och efterlevnad av stilguider.

      - name: Auto-korrigera lätta fel och commit
        run: |
          npm run lint-fix
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add -A
          git commit -m "Automatiska linter-fixar" --allow-empty
          git push
        # Detta steg korrigerar automatiskt fixbara fel och gör en commit av ändringarna.

      - name: Säkerhetskontroll av beroenden
        run: npm audit
        # Utför en säkerhetsgranskning av npm-paket för att identifiera och rapportera sårbarheter.

      - name: Ladda upp linter-resultat
        uses: actions/upload-artifact@v3
        with:
          name: linter-reports
          path: /github/workspace/superlinter.report.json
        # Sparar linter-rapporterna som en artefakt för senare granskning och analys.

      - name: Skapa linter-status
        if: failure()
        run: echo "Linter detected issues. Check the report for details."
        # Informerar om att linter hittade problem som behöver granskas.

      - name: Skicka notifiering
        if: failure()
        uses: some/notification-action@v1
        with:
          message: "Linting failed, please review the linter reports. Visit ${{ github.event.workflow_run.html_url }} for more details."
          token: ${{ secrets.SLACK_TOKEN }}
        # Skickar en detaljerad notifiering om att lintningen misslyckades, med en länk till arbetsflödet för djupare analys.





