name: Super-Linter

# Det här GitHub Actions-workflowet aktiveras vid varje 'push' och 'pull request' till 'main'-grenen. Det säkerställer att kvalitetskontroller utförs automatiskt för att upprätthålla hög kodstandard.
on:
  push:
  pull_request:
    branches:
      - main

jobs:
  super-lint:
    name: Lint kodbasen
    # Detta jobb körs på den senaste versionen av Ubuntu, vilket garanterar hög kompatibilitet och prestanda för lint-processen.
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      # Använder en matris för att testa kod i olika versioner av Node.js. Detta breddar testomfånget och säkerställer kompatibilitet över olika miljöer.
      matrix:
        node-version: [14.x, 16.x]

    steps:
      - name: Hämta koden
        uses: actions/checkout@v4
        # Detta steg klonar koden från ditt GitHub-repositorium till runner-maskinen för att möjliggöra åtkomst för Super-Linter.

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
        # Cachar Node.js-moduler för att snabba upp byggnadsprocessen genom att återanvända tidigare nedladdade moduler.

      - name: Använd Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
        # Konfigurerar GitHub-runner med specifika Node.js-versioner specificerade i testmatrisen, vilket säkerställer att testerna är relevanta.

      - name: Installera beroenden
        run: npm install
        # Installerar npm-paket som är nödvändiga för att Super-Linter ska kunna köra korrekt och effektivt.

      - name: Kör Super-Linter
        uses: github/super-linter@v4
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
        # Använder Super-Linter för att granska kodbasen för syntax- och stilfel. Konfigurationen är inställd för att endast validera ändrade filer.

      - name: Ladda upp linter-resultat
        uses: actions/upload-artifact@v3
        with:
          name: linter-reports
          path: /github/workspace/superlinter.report.json
        # Detta steg sparar linter-rapporterna som en artefakt, vilket gör dem tillgängliga för granskning efter att arbetsflödet har körts.

      - name: Skapa linter-status
        if: failure()
        run: echo "Linter detected issues. Check the report for details."
        # Ett enkelt steg som körs om linterprocessen misslyckas, för att informera utvecklare om att fel har upptäckts.

      - name: Skicka notifiering
        if: failure()
        uses: some/notification-action@v1
        with:
          message: "Linting failed, please review the linter reports."
          token: ${{ secrets.SLACK_TOKEN }}
        # Skickar en notifiering, exempelvis till Slack, om linterprocessen inte lyckas. Detta gör att teamet snabbt kan identifiera och åtgärda problem.






