name: Super-Linter

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Setup job för att förbereda arbetsmiljön
  setup:
    name: Förbereda arbetsmiljön
    runs-on: ubuntu-latest

    steps:
      - name: Hämta koden
        uses: actions/checkout@v4

      - name: Generera Cache Nyckel
        id: cache-key
        run: echo "::set-output name=key::$(echo ${{ runner.os }}-node-${{ matrix.node-version }}-$(hashFiles('**/package-lock.json')))"

      - name: Spara cache-nyckel till Environment File
        run: |
          echo "CACHE_KEY=$(cat cache_key.txt)" >> $GITHUB_ENV

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: ${{ runner.os }}-node-

  # Lint-and-test job för att utföra lintning och enhetstester
  lint-and-test:
    name: Lint och Test
    needs: setup
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node-version: [14.x, 16.x, 20.x]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Skicka startnotifiering till Discord
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"content":"Startar lint och test för push till main eller pull request."}' ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Använd Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Installera beroenden
        run: npm install

      - name: Kör Super-Linter
        uses: github/super-linter@v4
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Kör enhetstester
        run: npm test

      - name: Kör CodeQL
        uses: github/codeql-action/analyze@v1

  # Notify-and-finalize job för att skicka notifieringar och utföra sista åtgärder
  notify-and-finalize:
    name: Notifiering och Finalisering
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Skicka e-post notifiering om fel
        if: ${{ needs.lint-and-test.result == 'failure' }}
        run: |
          # Skicka e-post med felmeddelande
          echo "Linting eller testning misslyckades. Se rapporten för detaljer." | mail -s "Super-Linter - Fel påträffade" -a "From: GitHub Actions <noreply@github.com>" ${{ secrets.EMAIL_ADDRESS }}

      - name: Skicka Discord notifiering om resultat
        uses: DiscordWebhooks/DiscordWebhook@1.x
        with:
          url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: > 
              ${{ needs.lint-and-test.result == 'failure' && 'Linting eller testning misslyckades. Se rapporten för detaljer.' || 'Allt gick bra. Ingen linter eller testningsfel hittades!' }}

      - name: Auto-korrigera och Commit om framgång
        if: ${{ needs.lint-and-test.result == 'success' }}
        run: |
          npm run lint-fix
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add -A
          git commit -m "Automatiska linter-fixar" --allow-empty
          git push


